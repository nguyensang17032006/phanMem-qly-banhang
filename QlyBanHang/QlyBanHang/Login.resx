<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATMAAACkCAMAAADMkjkjAAAABGdBTUEAALGPC/xhBQAAAklQTFRFg6z+
        57aKXdXW////2tze0aOB4VFzyvL+hY6T6Ojog6v8WWV2OmpK1FR0Vl9mT1xuOWRIw8XIWm6LVpjxYp7w
        5LCGyJJkvIRTwYJDjqXh7OzsWGNvcY3CWYbCR5HtNTU1RkZG42B+dH2CoajT1KN7c5TMf6r/hbHxzc7N
        WX+10rCazI9mt8Ldp8T9o5OltoFarHNIsG822Oj87beCvSco7PT++f792uHrws3d8ff+la3r0tvo/pAA
        naXQjrT9b8ToqMDs5k5rEYz+p+DpU4CJlHVgsKK31OT/c9rb8pUqQ0A664gAJ5H+s839HTNK04MtSoPq
        yLrN4tnqw+Pi+72m3IMhY3Cbq4NucH2fwp2SLaLz++nunZqe9MXQ8LK//PH0vxIS1KChaSizdV+goHZT
        8NK07t7N55E6uaetp7LS8K9zeLjxZsvgSovY79DAr9Xe0KNZeMS1JjhBb1U61plHlWMvhFoyvHUmjMOs
        waxxmrKQ25ZZ351FWqmuWpmjZomtyGeCAEqBjNfVMFV+jcfJd7GnTxkAVywMO3JwVcDAXjcSjlwAPbfu
        QAAA54Oa7JqtYdzReXbIbV5umVlt8rvGiI7L5nKN3mRj4ZSXvW+gv2JisUA/3ElHrUt0zoKCuCgpmnJy
        4XJ02ri4gaCghGSOfFFb31NRqIy0ABQ1JFlqxMa4BCdBDSU06ruzzL/ebDO1n4LGNR9LTiCBeF7COS5D
        OwCIfkKo+qSGLSYUISgnWTQ0hq29kTU2ZH9tHVktBxASdZF/K0I8FR0JdAIIHAAAC9BJREFUeF7tnftX
        G1UewOPMSJmYlkB3XTtQEkEwuNTdDQwlAdIG3JYCJpWk2NRUgqx9WC3WV9G1ixv7Yte1rtZHrY8WXK2l
        INaytnZp0b9sz/d7J5k7d2ZC8eA5ZnI/P4Q79w4J8znf733MTAaXi8PhcDgcDofD4XA4HA6Hw+FwOBwO
        h8PhcDgcjrPoqs/RxTY5kUYb2P0KsaFTp55tdCCbbIiwOxagq/Mvf9bo38Y2Oo+IqipP71PNbF9BpHV1
        7l5PaCoNZ/L+A3c/owaBkBhCRDXIndkTUZ85uOnQA/vU4B3FmXWPV5LO7t6nBoMkxjSsnTUeEvI8685X
        l5yzffsPPLRfvUNnW3Rngj5KdHVWPUcoEWeq/PThsV42NQs4e75/1+tHGGfxePzlF16Mx+OdJeEMbfUI
        wWCojcLe2UvxHfEdu44YnfX3x19+5eWj/f2l4YzQ02MMM1tn453xHfF456tGZ0A/vpaAM/d2nGWYedTG
        2Wu74keP3rfredqZ60Aqlbq3895UKpXSRwYOYhNniPuvXJcVen/Wa3JWGrhXjMswbrKtFOxHOYSadT+D
        Y9T8rJptpNntBH3w50eo0NhQfc/P4BFd2TG2LU9100Bt7QBhPft3FA+NW9vtYI94WSr+NlnB1hmoHujO
        M1C8cUacNU3A62ZVAVQ11AGba1fOG2yFkbKd3d21e/bs2VPb3T3A/iXFAzpr+vv0wfb29g4dcFa26kR3
        dtdms4IwPr6n2J3d43uzqr3DsBIPhX4hZ1uyxwXhxJFni9xZ+clTp06mOzYb+YWcCcLpycnTgjBQ3M7S
        p0794591Zmf3A+Rg9aJ9JdtuURndOfCO8FZ391vCO7XF7az85MmT/0qbc3MYwGPeKw4Pi3ujcNTi8PCw
        +DZUnoHKJ6AUxfYn0c6wOCyKH0DxSWyHXyp7QmsHZ1tg0Hyr2J21p9PpNDPPAERRzB+zKGpOoJRzIooi
        Oo1i+1ncVW9/G9sxvPZqbxXd2a3NNgaKuj8LN7O0Nz8GdKAIXRQGF4oQMePOogjdGcZh2TAUz0DpA13f
        GSxif+aE+Znp0q+rofrTaFlZlBwyKwqDS8QsJcFj6YwKSYO+6L/1SW1tETsz0VC9lo4NYxaiqGFLZ5jG
        UXRG0lTXRzL2TFlZtGxtdc0AhpiTlLka3mWV5Lojox0SXKwzKuQsdyh7t2Zlty8UBQ3vYWjoURLFKMGe
        jdSiB02JpUlSpFST8MRfe6+G/UAH0ICpSfow7M5Ib4QdE3HG6qPDSE9eMkiQ7CaJjj3iWqc4o8eA9zEy
        TAeMA6BJH+0Ma5f9vahDnLmD2/GKyXYgOAhsxmtMeJSUBir6SL+OIWd2hhFFdsa3uJ8S/D776cVJRFUH
        P2xt/ch4US4YVKG7IkbIWEmFDplK4AhJOYuSyYj1HuQ9zrGfXpxE1MHW+ubmcx+iqNzqKRhUpzKtra0B
        SZKkAJQyI1CUz7e2traeh6I0gtVkD6jNpLD6Y6im96jEMhbPOWOWEVE/qVdEMfTpWTVvDG7NUKcymcyI
        jKI+y2Qy50kRajNTpHw+k8l8pkAxWw57CAlJkhLHPs9kMieyUC18nMlkLghQbBvNZFpbHdKfRQY/Dyrt
        SlvXRWN2qpunRqYUWZYkWVamRqZkWZahKI2MSKQoy1CtiIoi9grHyqcFQchmewVhcnp6UhB64QSjcKIc
        LrBks6JY+9wX/6l2kDNRIc6wEyKEgvTWcvRSV54sEcXa9RurHeNM/bJLFEUVcpOGO7Mnog5mvjp48NOL
        qj4CQH8WVCH7dBRRNFbkUErRmbr54idfjtAhhpid4ZUpFrmt9Jy5H6VoTqcPbnoUh01VVhRZBimykgsn
        W0rMmWHx1FBR0VT7oIhpmMAx8DgMgT0J+zhTSjDODDRUVzetJ85gpiAIk5OT+LNHVsQ2Y7LmUMTKuq/p
        WzasKA1nPYZjThTIzbpLM7FL1D0bVpSGs0Q2kcu4bCIrgTPIQgtiwNeMJIbScCbLSi7UEjAI2M41ZFB2
        CVYBBSgVZ/n0TMCG7RiggLPUYUYSQ8k6syEWi1UkLzOSGErWmZ6ONGL5TGwmdZyRxMCdGWiTZi6tSzKO
        WErWmQ3DyeQso8hEyTiDlRMunjRn9Nd4NKBSmZ093NtbeCngOGf6bdSMMxrr3Eys0THOgo04zdnGoaaN
        mrW8M3Y+oSiWc42eHsrZmgKh5ixn7qYrsdiVJrKRd3ZnhAzKCgWaw5xdmZmZiWkHYxlnoii2MdtaKWF0
        toY1peMsZxtn3r2QSk6Re08s+zNwBBdPAoEAXDlBZ3hOzeTMPjkd5syfTCaTs2SDckbONsILcSYFZFkG
        aejssaeAMcaZfXI6y5nbxtn8/JyizM1/pTlTAhhZAc3ZPCj7xjgEFEpOhzl786Fk0pSbyvy3167OzV29
        9u08yUXZ6KwenH1nctYrCM/vyPGaY525GmeTyeQc62zU5/t2/rtrvmujWv+FzsAcyc2Fb576b5fJWVZ4
        tbN/F7KjvxO+m+hMZ67k99/PmeZn81evXZUHF65dhRsTwNkR0CUdyfVnC1cXvrhscrZGeKm//xXgxaP9
        neNOdIamHjycTOYqwBleQ1GUufrNijL41ZyijQGJcUmRT5CLKaKybWFhYeGm0RlsCOM79u9//fX9Lc98
        3/mSrsxBzqpeqKioWDd2oHJ3jcu1YXdX10Rd3cTERGUeSR835UTgeABW6yTORkdHR3uYZYBePJy8PE5F
        mYOc1Vz3+fr8Nzo+2uvr80eG6spNpEGW5kyWj+Crlqu4cjI6y2/1kItWOr1OceYe8vl8fr8vPTXl8/e5
        h1hh5eXllTDjh1USTvuHc8sAbZtxFgrBq8qe+kAc46zKh9L8e0f8/r4Ga2ewcIJDpshvs87EUMiwowFn
        Obsx9dmP/r4aK2cTvynEIaOzQ2y7gfWOcua7cNHv72uydKY9jcsGxlkt227ESc78P3zis3FWV1WQmwZn
        N9lmlnsc5Mz/uV2c1bFPLzBSZ3RW+MEH8OyD4ncG4yY6+x/tbF0doDmrKMxN2tkY22rGQc5+sHOW1qe3
        1tDO1rCNZrYW/VfEmq5rzvx+f99QzlldtS4tjTe1F2BsLH8VZQzudF+G4nfWYO2MCrQ0e9Asi7e8Xs/i
        4qLH47l1mW004xBnOWkVVZozOjmXcaaIi16v1+shlJAzzZrPl1tvEme4Rb52Y4ciiqAs52yabTfjHGdo
        DV6btsKBVaK0cvZ4zeScadJKw1lfzpnP56t44Ybv+joMLBJo+OWvgsiieKv0nJGkJGzbVuW7fnvqsCST
        3CyclwS5RJ1prJtNJutr6mZTj6fJbGOZ/h8JoDMYNT0ezxLbamYT+yf8qnE/bAE+3P9xI3rVQ5YYHFRi
        mC0Racs7ay6uMIv8wYrfr5yIK6BDnE0vobNH9Gcc2lBcylyugw/cbcFvV0hLvctNOUujs8pp4oz9yKKn
        3tLZXSukJdwYppxNE2eVWpyxn1nsrJoznMNpEGeSdIs7s6cl3NjMOluUJR5nBWgJN7azzpYkCQcB7sya
        lnBjB+VsCYdNScJBgDuzpiUcoZRJeFrjsiRd5s7sYZyRYZPHWUFawptYZ7cC3FlBWsL0VCOgTTV4bhai
        JUwPm9zZnWDhbBHW6tyZPS1hShl3dkcYneFpDTgFFABnSxHtH4O4XMV2AsOG1XF2VyW1QiengpaggM7y
        T1Gu3Mp+enGySs5oZcTZdN4Z1RJ2RKT9Ys7S3FlhWirpp3PfBGc3oYTO9IZNjlC2Ws7C9KNZGzxer9cN
        pdN4npZqcgSr5Yx+T3QG/znMjc74XMMSo7MNHq/3NBTcj3Bntlg4Q1PcmT1GZw96vV5iaoI7s8XozM2d
        3QEmZ54JLDU40lkkxV5EB+5dIQcMXtxej+fHG0OQpR6PtyriuH++eeGPFvxuZdz3sOEt3T/99NPtN0Gj
        +/aN27evxDYamoufC3+y4L4VwjiLxYbcGFxufNheDP05iA2rgSn7NElF/V9IORwOh8PhcDgcDofD4XA4
        HA6Hw+FwOBwOh/Mr5//Qwz48xiCV/QAAAABJRU5ErkJggg==
</value>
  </data>
</root>